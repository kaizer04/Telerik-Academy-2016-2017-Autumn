Design pattern: Simple Factory
	* In Program class, method CreateComputers is simple factory creating different types of IComputersFactory based on user input

Design pattern: Strategy
	* 

Design pattern: Template Method
	* 

Design pattern: Abstract factory
	* Introduced IComputersFactory as a base class for HpComputersFactory and DellComputersFactory which creates different types of computers

Design pattern: Composite
	* 

Design pattern: Mediator
	* 

Found bottlenecks:
	* 
	* 

Found bugs:
	* When invalid command name is given the program does not output message "Invalid command!"
	* When "process" command is executed NullReferenceException is thrown
	* System.Collections.Generic.dll with single class was referenced in our assembly

Single responsibility principle
	* 

Open/closed principle
	* 

Liskov substitution principle
	* 

Interface segregation principle
	* 

Dependency inversion principle
	* 
